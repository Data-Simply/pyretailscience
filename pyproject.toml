[project]
name = "pyretailscience"
version = "0.4.0"
description = "Retail Data Science Tools"
authors = [{ name = "Murray Vanwyk", email = "2493311+mvanwyk@users.noreply.github.com" }]
requires-python = ">=3.10,<3.13"
readme = "README.md"
license = "Elastic-2.0"
dependencies = [
    "pandas>=2.1.4,<3",
    "pyarrow>=14.0.2,<15",
    "matplotlib>=3.9.1,<4",
    "numpy>=1.26.3,<2",
    "loguru>=0.7.2,<0.8",
    "tqdm>=4.66.1,<5",
    "scipy>=1.13.0,<2",
    "scikit-learn>=1.4.2,<2",
    "matplotlib-set-diagrams~=0.0.2",
    "toml>=0.10.2,<0.11",
    "duckdb>=1.0.0,<2",
    "graphviz>=0.20.3,<0.21",
    "ibis-framework[duckdb]>=9.5.0,<10",
]

[dependency-groups]
dev = [
    "pytest>=8.0.0,<9",
    "pytest-cov>=4.1.0,<5",
    "nbstripout>=0.7.1,<0.8",
    "ruff>=0.4.8,<0.5",
    "pre-commit>=3.6.2,<4",
    "pytest-mock>=3.14.0,<4",
]
examples = [
    "jupyterlab>=4.2.5,<5",
    "tqdm>=4.66.1,<5",
]
docs = [
    "mkdocs-material>=9.5.4,<10",
    "mkdocstrings[python]>=0.24.0,<0.25",
    "mkdocs>=1.5.3,<2",
    "mkdocs-jupyter>=0.24.6,<0.25",
]

[tool.uv]
default-groups = [
    "dev",
    "examples",
    "docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--cov=pyretailscience --cov-report=term-missing  --cov-branch"

[tool.coverage.run]
branch = true
source = ["pyretailscience"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.ruff]
target-version = "py310"
line-length=120
show-fixes = true

[tool.ruff.lint]
ignore = [
    "ANN101",
    "ANN102",
    "EM101",
    "TRY003", # Disable until we start creating proper exception classes
    "PT011",  # Disable until we start creating proper exception classes
    "PTH123", # Not using open() to open files
    "SLF001", # Ibis makes a lot of use of the ibis._[column] which triggers this
]
select = [
    "A",    # Builtins
    "ANN",  # Annotations
    "ARG",  # Unused arguments
    "B",    # Bugbear
    "BLE",  # Blind except
    "C4",   # Comprehensions
    "C90",  # mccabe
    "COM",  # Commas
    "D",    # Pydocstyle
    "D1",   # Undocumented public elements
    "D2",   # Docstring conventions
    "D3",   # Triple double quotes
    "D4",   # Docstring text format
    "DTZ",  # Datetimes
    "EM",   # Error messages
    "ERA",  # Commented-out code
    "EXE",  # Executable
    "F",    # Pyflakes
    "FA",   # __future__ annotations
    "FLY",  # F-strings
    "G",    # Logging format
    "I",    # Isort
    "ICN",  # Import conventions
    "INP",  # Disallow PEP-420 (Implicit namespace packages)
    "INT",  # gettext
    "ISC",  # Implicit str concat
    "N",    # PEP-8 Naming
    "NPY",  # Numpy
    "PERF", # Unnecessary performance costs
    "PGH",  # Pygrep hooks
    "PIE",  # Unnecessary code
    "PL",   # Pylint
    "PT",   # Pytest
    "PTH",  # Use Pathlib
    "PYI",  # Stub files
    "Q",    # Quotes
    "RET",  # Return
    "RUF",  # Ruff
    "RSE",  # Raise
    "S",    # Bandit
    "SIM",  # Code simplification
    "SLF",  # Private member access
    "SLOT", # __slots__
    "T10",  # Debugger
    "T20",  # Print
    "TCH",  # Type checking
    "TID",  # Tidy imports
    "TRY",  # Exception handling
    "UP",   # Pyupgrade
    "W",    # Warnings
    "YTT",  # sys.version
]

[tool.ruff.lint.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405", "D104"]
"tests/*" = ["ANN", "ARG", "INP001", "S101", "SLF001"]
"*.ipynb" = ["T201"]

[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
