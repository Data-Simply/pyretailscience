name: Page Deploy

on:
  push:
    branches:
      - "main"
    paths:
      - "**.md"
      - "mkdocs.yml"
      - "docs/**"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (default: "dev" for main branch)'
        required: false
        default: 'dev'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv Package
        run: |
          pip install --upgrade pip
          pip install uv==0.5.30

      - name: Install Pre-commit in uv environment
        run: uv run pip install pre-commit

      - name: Install Dependencies
        run: uv sync --group docs

      - name: Setup Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set version variables
        id: set-version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            REF_NAME="${GITHUB_REF#refs/tags/}"
            echo "VERSION=${REF_NAME}" >> $GITHUB_ENV
            echo "Building docs for release: ${REF_NAME}"
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "Building docs for specified version: ${{ github.event.inputs.version }}"
          else
            echo "VERSION=dev" >> $GITHUB_ENV
            echo "Building docs for dev branch"
          fi

      - name: Build docs with Mike
        run: |
          echo "== Existing Versions and Aliases =="
          EXISTING=$(uv run mike list || echo "")
          echo "$EXISTING"

          if echo "$EXISTING" | grep -q "^${VERSION} "; then
            echo "== Updating existing version: ${VERSION} =="
            uv run mike deploy --update --push "${VERSION}"
          else
            echo "== Deploying new version: ${VERSION} =="
            uv run mike deploy --push "${VERSION}"
          fi

          if [[ "${{ github.event_name }}" == "release" ]]; then
            CURRENT_ALIAS=$(echo "$EXISTING" | grep -E '\slatest$' | awk '{print $1}')
            echo "Current version with alias 'latest': $CURRENT_ALIAS"

            if [[ "$CURRENT_ALIAS" != "${VERSION}" ]]; then
              echo "== Updating alias: latest â†’ ${VERSION} =="
              uv run mike alias --push "${VERSION}" latest
              uv run mike set-default --push latest
            else
              echo "== Alias 'latest' already set to ${VERSION}, skipping re-aliasing =="
            fi
          fi

      - name: Debug - List site directory
        run: |
          find site -type f | sort
